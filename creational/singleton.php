<?php
/**
 * Одиночка
 * Шаблон позволяет удостовериться, что создаваемый объект — единственный в своём классе.
 * Шаблон «Одиночка» позволяет ограничивать создание класса единственным объектом.
 * Это удобно, когда для координации действий в рамках системы требуется,
 * чтобы объект был единственным в своём классе.
 *
 * Но применяйте его с осторожностью, потому что «Одиночка» вносит в приложение
 * глобальное состояние, так что изменение в одном месте может повлиять на все
 * остальные случаи использования, а отлаживать такое — не самое простое занятие.
 * Другие недостатки шаблона: он делает ваш код сильно связанным (tightly coupled),
 * а создание прототипа (mocking) «Одиночки» может быть затруднено.
 */

class Singleton
{
    private static $instance;

    private function __construct()
    {
        // Прячем конструктор
    }

    public static function getInstance(): Singleton
    {
        if (!self::$instance) {
            self::$instance = new self();
        }

        return self::$instance;
    }

    private function __clone()
    {
        // Отключаем клонирование
    }

    private function __wakeup()
    {
        // Отключаем десериализацию
    }
}

//------------------------------------------------------

$president1 = Singleton::getInstance();
$president2 = Singleton::getInstance();

var_dump($president1 === $president2); // true
